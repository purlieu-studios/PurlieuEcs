name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  checks: write
  pull-requests: write
  security-events: write

env:
  DOTNET_VERSION: '8.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  validate-pr:
    name: Validate PR
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better diff analysis

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Check PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          build
          ci
          chore
          revert

    - name: Verify no direct commits to main
      run: |
        if [ "${{ github.base_ref }}" = "main" ] && [ "${{ github.head_ref }}" = "" ]; then
          echo "Direct commits to main branch are not allowed. Please use a feature branch."
          exit 1
        fi

    - name: Check file changes
      id: changes
      uses: dorny/paths-filter@v2
      with:
        filters: |
          src:
            - 'src/**'
          tests:
            - 'src/**/*.Tests/**'
          benchmarks:
            - 'src/**/*.Benchmark/**'
          workflows:
            - '.github/workflows/**'

    - name: Validate test coverage
      if: steps.changes.outputs.src == 'true'
      run: |
        echo "Source files changed. Checking for corresponding test changes..."
        if [ "${{ steps.changes.outputs.tests }}" != "true" ]; then
          echo "Warning: Source files changed but no test files were updated."
          echo "Please ensure your changes are properly tested."
        fi

  test-categories:
    name: Run Test Categories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        category: [API, ALLOC, DET, SNAP, IT, BENCH, SOAK, E2E]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run ${{ matrix.category }} tests
      run: |
        dotnet test --no-build --configuration Release \
          --filter "FullyQualifiedName~${{ matrix.category }}_" \
          --logger "console;verbosity=detailed" \
          --logger "trx;LogFileName=${{ matrix.category }}-results.trx"
      continue-on-error: true  # Don't fail if no tests match the category

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.category }}
        path: '**/${{ matrix.category }}-results.trx'

  api-compatibility:
    name: API Compatibility Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        path: pr

    - name: Checkout main
      uses: actions/checkout@v4
      with:
        ref: main
        path: main

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install API compatibility tool
      run: dotnet tool install -g Microsoft.DotNet.ApiCompat.Tool

    - name: Build main branch
      working-directory: main
      run: |
        dotnet build Purlieu.Ecs/Purlieu.Ecs.csproj --configuration Release || echo "Project not found"
        if [ -f Purlieu.Ecs/bin/Release/net8.0/Purlieu.Ecs.dll ]; then
          cp Purlieu.Ecs/bin/Release/net8.0/Purlieu.Ecs.dll ../main-api.dll
        else
          touch ../main-api.dll
        fi

    - name: Build PR branch
      working-directory: pr
      run: |
        dotnet build Purlieu.Ecs/Purlieu.Ecs.csproj --configuration Release || echo "Project not found"
        if [ -f Purlieu.Ecs/bin/Release/net8.0/Purlieu.Ecs.dll ]; then
          cp Purlieu.Ecs/bin/Release/net8.0/Purlieu.Ecs.dll ../pr-api.dll
        else
          touch ../pr-api.dll
        fi

    - name: Check API compatibility
      run: |
        apicompat ../main-api.dll ../pr-api.dll --enable-rule-attributes || true
        # Note: || true allows the workflow to continue even if there are breaking changes
        # Remove || true to enforce strict compatibility

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'